package com.kat.test;

import org.testng.Assert;
import org.testng.annotations.Listeners;
import org.testng.annotations.Test;

import com.kat.base.BaseClass;
import com.kat.util.TestResultListener;

import io.restassured.RestAssured;
import io.restassured.http.Header;
import io.restassured.http.Headers;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import io.restassured.response.ResponseBody;
import io.restassured.specification.RequestSpecification;
@Listeners(TestResultListener.class)
public class KP190_Test extends BaseClass {
	String endpointURL = excelUtil.getCellData("TestSuite", 1, 1);
	@Test
	public void TC_002_verifyCurrentCompetitions() {

		String fixtureId ="";//excelUtil.getCellData("Scorecard", 1, 1);
		RestAssured.baseURI = endpointURL;
		RequestSpecification httpRequest = RestAssured.given();
		Response response = httpRequest.get(fixtureId);
		// Get the Status code
		int statusCode = response.getStatusCode();
		System.out.println("statusCode- " + statusCode);
		Assert.assertEquals(statusCode, 200, "Correct status code returned");
		// Get the status line from the Response
		String statusLine = response.getStatusLine();
		System.out.println("statusLine- " + statusLine);
		Assert.assertEquals(statusLine, "HTTP/1.1 200 OK", "Correct status Line returned");
		Headers allHeaders = response.headers();
		// Show all the Headers in Key value
		for (Header header : allHeaders) {
			System.out.println("Key: " + header.getName() + " Value: " + header.getValue());
		}

		// Header named Content-Type
		String contentType = response.header("Content-Type");
		//Assert.assertEquals(contentType, "application/json; charset=utf-8");
		System.out.println("contentType- "+contentType);

		// Header named Server
		String serverType = response.header("Server");
		//Assert.assertEquals(serverType, "nginx");
		System.out.println("serverType- "+serverType);

		// Header named Content-Encoding
		String contentEncoding = response.header("Content-Encoding");
		//Assert.assertEquals(contentEncoding, "gzip");

		// Retrieve the body of the Response
		// ResponseBody body = response.getBody();
		// System.out.println("Response Body is: " + body.asString());
		long responseTime = response.getTime();
		System.out.println("responseTime- " + responseTime);

		JsonPath jsonPathEvaluator = response.jsonPath();
		int competitionId = jsonPathEvaluator.get("CurrentCompetitionDetails[0].CompetitionId");
		System.out.println("CompetitionId - " + competitionId);

		String formatDisplayName = jsonPathEvaluator.get("CurrentCompetitionDetails[3].Formats[0].DisplayName");
		System.out.println("Format Display Name- " + formatDisplayName);
		String seriesFormatName = jsonPathEvaluator.get("CurrentCompetitionDetails[3].Formats[0].SeriesFormatName");
		System.out.println("Series Format Name- " + seriesFormatName);
		String competitionName = jsonPathEvaluator.get("CurrentCompetitionDetails[3].Name");
		System.out.println("Competition Name- " + competitionName);

	}
}
